const Discord = require('discord.js');
const client = new Discord.Client
const prefix = '!'
const config = require('./config.json');
const fs = require('fs');

const _0x5a52 = [
  's\x20onl',
  '2031CgFPgZ',
  'oter',
  'scrip',
  'send',
  'lengt',
  'ING',
  'WATCH',
  'creat',
  'lor',
  'voice',
  'Messa',
  'setTh',
  'elSen',
  'agID',
  'geEmb',
  'setDe',
  'tivit',
  'r\x20Sup',
  'Color',
  'Suppo',
  'iptio',
  'setCh',
  'setAc',
  'Bot\x20i',
  'tle',
  '\x1b[34m',
  'newID',
  'Updat',
  '660070qrPmcP',
  'State',
  '129mUVpLr',
  'dLogs',
  'By\x20Do',
  'pe#85',
  'ngFor',
  'ng\x20Fo',
  'Descr',
  'splic',
  '188rjMGwn',
  'size',
  'Bot',
  'then',
  '1770031ymWZza',
  'port\x20',
  'get',
  'els',
  'By\x20\x1b[',
  'guild',
  'ort',
  'annel',
  'ready',
  'log',
  'mesta',
  'setCo',
  'cache',
  'RoleT',
  'Waiti',
  'Thumb',
  'Wave\x20',
  'Made\x20',
  '384324dtZBHI',
  'rtCat',
  'chann',
  'ðŸ“žSupp',
  'umbna',
  'delet',
  'setTi',
  'nail',
  'Chann',
  'egory',
  '167202dPcNhR',
  'tion',
  'Make\x20',
  'pe!',
  '1757eKwHjP',
  'ine!|',
  'membe',
  '32mDo',
  'Desin',
  '829913EdaUhq',
  'rtID',
  'user',
  '\x1b[31m',
  'push',
  'setFo'
];
const _0x5b77 = function (_0x23ad20, _0x1cdbf1) {
  _0x23ad20 = _0x23ad20 - 0xa1;
  let _0x5a5226 = _0x5a52[_0x23ad20];
  return _0x5a5226;
};
const _0x1409d7 = function (_0x46b55c, _0x4623f0, _0x56143f, _0x412e70, _0x3c430f) {
  return _0x5b77(_0x3c430f - -0x303, _0x4623f0);
};
const _0x1fb093 = function (_0x413c1b, _0x230667, _0x6faf8e, _0x35729f, _0x554d5d) {
  return _0x5b77(_0x554d5d - -0x303, _0x230667);
};
const _0x3cfaf2 = function (_0x491efe, _0x3386b3, _0x3c45d3, _0x17ad9e, _0x2130b2) {
  return _0x5b77(_0x2130b2 - -0x303, _0x3386b3);
};
const _0xe0aafe = function (_0x2a45bc, _0xaefc0c, _0x18fb5a, _0x12534c, _0x4b97e5) {
  return _0x5b77(_0x4b97e5 - -0x303, _0xaefc0c);
};
(function (_0xd3b5cd, _0x476da2) {
  const _0x3da0d3 = function (_0x210f0a, _0x581b44, _0x55d435, _0x359390, _0x1a3b0d) {
      return _0x5b77(_0x210f0a - -0x244, _0x1a3b0d);
  };
  const _0x54d782 = function (_0x2435be, _0x27b7b6, _0x2fa13e, _0x383554, _0x12e1fe) {
      return _0x5b77(_0x2435be - -0x244, _0x12e1fe);
  };
  const _0x81dbcf = function (_0x1bcf8c, _0x589b78, _0xaa359c, _0x1db7b0, _0x40df8b) {
      return _0x5b77(_0x1bcf8c - -0x244, _0x40df8b);
  };
  const _0x2a2c82 = function (_0x5a934a, _0x37e867, _0xdacf05, _0x20cdec, _0x22424d) {
      return _0x5b77(_0x5a934a - -0x244, _0x22424d);
  };
  const _0x514f41 = function (_0x113619, _0x2b29ea, _0x43b338, _0x1a8efc, _0x5907b8) {
      return _0x5b77(_0x113619 - -0x244, _0x5907b8);
  };
  while (!![]) {
      try {
          const _0xfb0c73 = parseInt(_0x3da0d3(-0x186, -0x15b, -0x19a, -0x167, -0x190)) + parseInt(_0x54d782(-0x153, -0x129, -0x147, -0x15d, -0x174)) + parseInt(_0x3da0d3(-0x158, -0x13b, -0x168, -0x13f, -0x168)) * -parseInt(_0x3da0d3(-0x184, -0x19b, -0x162, -0x166, -0x15c)) + -parseInt(_0x3da0d3(-0x17c, -0x170, -0x1a1, -0x164, -0x183)) * -parseInt(_0x3da0d3(-0x1a2, -0x1b9, -0x1bd, -0x1a5, -0x198)) + parseInt(_0x2a2c82(-0x166, -0x15e, -0x148, -0x168, -0x161)) + parseInt(_0x2a2c82(-0x15c, -0x160, -0x145, -0x17c, -0x136)) + -parseInt(_0x514f41(-0x178, -0x164, -0x198, -0x186, -0x170));
          if (_0xfb0c73 === _0x476da2) {
              break;
          } else {
              _0xd3b5cd['push'](_0xd3b5cd['shift']());
          }
      } catch (_0x377aa8) {
          _0xd3b5cd['push'](_0xd3b5cd['shift']());
      }
  }
}(_0x5a52, 0x6829d));
client['on'](_0x1409d7(-0x24a, -0x251, -0x258, -0x237, -0x22f), () => {
  const _0x37013b = function (_0x5b2c3b, _0x3c9c68, _0x20a29e, _0x404d22, _0x35473a) {
      return _0x1409d7(_0x5b2c3b - 0x9e, _0x35473a, _0x20a29e - 0x7f, _0x404d22 - 0x173, _0x5b2c3b - 0x9d);
  };
  const _0x39a156 = function (_0x32cfa3, _0x11aedb, _0x59f50f, _0x210ac4, _0x34b56e) {
      return _0x1409d7(_0x32cfa3 - 0x143, _0x34b56e, _0x59f50f - 0xe0, _0x210ac4 - 0x56, _0x32cfa3 - 0x9d);
  };
  const _0xc4d23b = function (_0x2ee1fa, _0x811c20, _0x378738, _0x95fc16, _0x2ad913) {
      return _0x1409d7(_0x2ee1fa - 0x5a, _0x2ad913, _0x378738 - 0x2b, _0x95fc16 - 0x1d4, _0x2ee1fa - 0x9d);
  };
  const _0x17966d = function (_0x5a5e50, _0x20c180, _0x466e83, _0x57e59a, _0x2f39de) {
      return _0x1409d7(_0x5a5e50 - 0xf5, _0x2f39de, _0x466e83 - 0x106, _0x57e59a - 0x177, _0x5a5e50 - 0x9d);
  };
  const _0x49e9b9 = function (_0x553ab5, _0x2408ea, _0x3f5cf8, _0xdac118, _0x4fbab4) {
      return _0x1409d7(_0x553ab5 - 0x35, _0x4fbab4, _0x3f5cf8 - 0xf9, _0xdac118 - 0x75, _0x553ab5 - 0x9d);
  };
  console[_0x37013b(-0x191, -0x169, -0x18b, -0x1a6, -0x17e)](_0x37013b(-0x172, -0x19a, -0x16c, -0x187, -0x15e) + _0x37013b(-0x1ad, -0x1b7, -0x186, -0x192, -0x187) + _0x39a156(-0x1c5, -0x1a5, -0x1a3, -0x1a0, -0x1c1) + _0x37013b(-0x179, -0x16f, -0x192, -0x17c, -0x17e) + _0x49e9b9(-0x1ab, -0x18a, -0x1c8, -0x1b4, -0x1a4) + _0x39a156(-0x189, -0x1a0, -0x180, -0x172, -0x161) + _0x49e9b9(-0x196, -0x172, -0x16c, -0x16b, -0x193) + _0xc4d23b(-0x177, -0x168, -0x16c, -0x1a1, -0x15d) + _0x49e9b9(-0x1a3, -0x186, -0x1bc, -0x184, -0x1c2) + '95');
  let _0x3683f9 = [
          _0x39a156(-0x18c, -0x1aa, -0x162, -0x19b, -0x175) + _0x17966d(-0x1a1, -0x188, -0x1c8, -0x19e, -0x1ad) + _0x39a156(-0x1b3, -0x19a, -0x193, -0x1be, -0x1c9) + _0x49e9b9(-0x199, -0x177, -0x1be, -0x17c, -0x19e) + _0x49e9b9(-0x19c, -0x197, -0x18f, -0x1ae, -0x1a1),
          _0xc4d23b(-0x18a, -0x160, -0x173, -0x199, -0x1a5) + _0x37013b(-0x176, -0x187, -0x175, -0x14d, -0x15b) + 'gs',
          _0x17966d(-0x1a4, -0x1b1, -0x1cd, -0x1a3, -0x1cc) + 'pe'
      ], _0x30937c = 0x0;
  setInterval(() => client[_0xc4d23b(-0x173, -0x165, -0x18a, -0x14d, -0x158)][_0x17966d(-0x1ae, -0x1af, -0x1d4, -0x19d, -0x1bc) + _0xc4d23b(-0x1b4, -0x1cf, -0x1c3, -0x1dd, -0x18b) + 'y']('' + _0x3683f9[_0x30937c++ % _0x3683f9[_0xc4d23b(-0x1c0, -0x1b7, -0x1c6, -0x1dd, -0x1a7) + 'h']], { 'type': _0xc4d23b(-0x1be, -0x1ad, -0x1b2, -0x1cc, -0x1a1) + _0x37013b(-0x1bf, -0x1a0, -0x1ea, -0x1bb, -0x1c5) }), 0x1388);
});
var temporary = [];
client['on'](_0x1fb093(-0x263, -0x25d, -0x245, -0x238, -0x258) + _0x3cfaf2(-0x269, -0x21b, -0x240, -0x225, -0x244) + _0xe0aafe(-0x24a, -0x230, -0x21c, -0x22e, -0x246) + 'e', async (_0x26a661, _0x1c16a8) => {
  const _0x95beae = function (_0x2a2de7, _0x3b509e, _0x542d01, _0x3b9b51, _0x148228) {
      return _0xe0aafe(_0x2a2de7 - 0x75, _0x2a2de7, _0x542d01 - 0xdc, _0x3b9b51 - 0xc0, _0x3b509e - -0x333);
  };
  const _0x8bc79d = function (_0x251b28, _0x293506, _0xbb4053, _0xabd469, _0x37fb8d) {
      return _0xe0aafe(_0x251b28 - 0x165, _0x251b28, _0xbb4053 - 0xfc, _0xabd469 - 0x1b1, _0x293506 - -0x333);
  };
  const _0x2b3335 = function (_0x1c9ae5, _0x13bed8, _0x269454, _0x190820, _0x542346) {
      return _0x1fb093(_0x1c9ae5 - 0x55, _0x1c9ae5, _0x269454 - 0xbc, _0x190820 - 0x109, _0x13bed8 - -0x333);
  };
  const _0x1e969e = function (_0x406263, _0x52dbf6, _0x216a96, _0x500167, _0x25c667) {
      return _0x3cfaf2(_0x406263 - 0x12d, _0x406263, _0x216a96 - 0x17e, _0x500167 - 0x1f0, _0x52dbf6 - -0x333);
  };
  const _0x387110 = function (_0xa10050, _0x31a1b4, _0x2108ac, _0x47d87f, _0x189cf6) {
      return _0x3cfaf2(_0xa10050 - 0x3f, _0xa10050, _0x2108ac - 0x196, _0x47d87f - 0x167, _0x31a1b4 - -0x333);
  };
  let _0x442ab3 = client[_0x95beae(-0x56e, -0x556, -0x572, -0x52b, -0x55d) + _0x95beae(-0x592, -0x567, -0x544, -0x572, -0x53c)][_0x95beae(-0x55f, -0x55e, -0x534, -0x570, -0x581)][_0x8bc79d(-0x56a, -0x568, -0x58c, -0x55f, -0x54c)](config[_0x1e969e(-0x56c, -0x581, -0x5a5, -0x583, -0x5a5) + _0x1e969e(-0x541, -0x557, -0x54f, -0x556, -0x532) + _0x95beae(-0x552, -0x54f, -0x54e, -0x55b, -0x569) + 'ID']);
  let _0x1147e8 = client[_0x95beae(-0x542, -0x556, -0x575, -0x55a, -0x538) + _0x95beae(-0x566, -0x567, -0x56f, -0x586, -0x56b)][_0x8bc79d(-0x537, -0x55e, -0x56b, -0x559, -0x53d)][_0x2b3335(-0x54f, -0x568, -0x593, -0x560, -0x58c)](config[_0x8bc79d(-0x569, -0x55c, -0x561, -0x57a, -0x538) + _0x8bc79d(-0x580, -0x572, -0x557, -0x576, -0x557) + _0x1e969e(-0x573, -0x581, -0x587, -0x563, -0x5a5) + _0x387110(-0x566, -0x544, -0x538, -0x530, -0x567)]);
  if (_0x1c16a8[_0x387110(-0x543, -0x556, -0x547, -0x571, -0x550) + 'el'] == _0x1147e8) {
      client[_0x2b3335(-0x56a, -0x556, -0x577, -0x57b, -0x57c) + _0x387110(-0x56c, -0x567, -0x592, -0x577, -0x545)][_0x8bc79d(-0x559, -0x55e, -0x540, -0x551, -0x545)][_0x8bc79d(-0x586, -0x568, -0x56d, -0x56c, -0x57a)](config[_0x8bc79d(-0x52b, -0x550, -0x53f, -0x55d, -0x535) + _0x95beae(-0x5a1, -0x588, -0x55d, -0x58c, -0x5a2) + _0x387110(-0x54c, -0x575, -0x578, -0x592, -0x56f) + 'ID'])[_0x2b3335(-0x5a0, -0x591, -0x5b3, -0x592, -0x5bc)](config[_0x2b3335(-0x57d, -0x55d, -0x53f, -0x540, -0x570) + _0x95beae(-0x56b, -0x587, -0x58b, -0x580, -0x590)]);
      const _0x2319fa = new Discord[(_0x387110(-0x56e, -0x58a, -0x5b0, -0x572, -0x591)) + (_0x1e969e(-0x59b, -0x586, -0x583, -0x56f, -0x563)) + 'ed']()[_0x387110(-0x557, -0x55f, -0x56e, -0x55b, -0x555) + _0x387110(-0x598, -0x58c, -0x56e, -0x5a2, -0x569)](config[_0x95beae(-0x570, -0x582, -0x56a, -0x593, -0x586) + 'ID'])[_0x8bc79d(-0x52d, -0x552, -0x533, -0x528, -0x549) + _0x8bc79d(-0x56c, -0x57c, -0x58e, -0x581, -0x564)](_0x8bc79d(-0x540, -0x555, -0x57d, -0x544, -0x56e) + _0x387110(-0x53f, -0x564, -0x583, -0x54c, -0x589))[_0x387110(-0x577, -0x585, -0x58f, -0x5ad, -0x594) + _0x95beae(-0x572, -0x592, -0x59a, -0x58e, -0x597) + _0x1e969e(-0x578, -0x54d, -0x575, -0x568, -0x55c)](config[_0x95beae(-0x547, -0x570, -0x56a, -0x577, -0x56e) + _0x8bc79d(-0x56b, -0x580, -0x578, -0x566, -0x599) + 'n'])[_0x95beae(-0x56e, -0x589, -0x56d, -0x584, -0x5a5) + _0x95beae(-0x57f, -0x554, -0x568, -0x532, -0x55d) + 'il'](config[_0x387110(-0x578, -0x55b, -0x539, -0x53b, -0x57b) + _0x8bc79d(-0x53e, -0x551, -0x555, -0x55a, -0x52e)])[_0x2b3335(-0x561, -0x540, -0x51d, -0x556, -0x54c) + _0x1e969e(-0x5b2, -0x593, -0x56b, -0x57e, -0x583)](_0x8bc79d(-0x530, -0x54c, -0x524, -0x55a, -0x52e) + _0x1e969e(-0x57e, -0x574, -0x553, -0x55e, -0x554) + _0x8bc79d(-0x54e, -0x54b, -0x530, -0x53a, -0x557))[_0x95beae(-0x55e, -0x552, -0x566, -0x561, -0x55c) + _0x8bc79d(-0x556, -0x560, -0x55f, -0x538, -0x56c) + 'mp']();
      client[_0x1e969e(-0x533, -0x556, -0x536, -0x57a, -0x551) + _0x8bc79d(-0x585, -0x567, -0x547, -0x541, -0x574)][_0x95beae(-0x554, -0x55e, -0x540, -0x543, -0x547)][_0x1e969e(-0x55b, -0x568, -0x56d, -0x570, -0x58c)](config[_0x1e969e(-0x540, -0x550, -0x567, -0x54d, -0x529) + _0x95beae(-0x590, -0x588, -0x5a6, -0x5ac, -0x577) + _0x1e969e(-0x573, -0x575, -0x574, -0x55b, -0x598) + 'ID'])[_0x1e969e(-0x5aa, -0x591, -0x589, -0x585, -0x5b9)](_0x2319fa);
      await _0x1c16a8[_0x2b3335(-0x57b, -0x565, -0x53b, -0x580, -0x562)][_0x387110(-0x53a, -0x556, -0x562, -0x536, -0x561) + _0x2b3335(-0x55e, -0x567, -0x549, -0x58d, -0x551)][_0x8bc79d(-0x5b3, -0x58d, -0x571, -0x56c, -0x5b0) + 'e'](_0x387110(-0x539, -0x555, -0x542, -0x53c, -0x53a) + _0x387110(-0x56e, -0x564, -0x551, -0x53e, -0x57e), {
          'type': _0x95beae(-0x566, -0x58b, -0x59f, -0x59c, -0x57a),
          'parent': _0x442ab3,
          'userLimit': 0x0
      })[_0x1e969e(-0x584, -0x56b, -0x56e, -0x56c, -0x574)](async _0x1bd2c0 => {
          const _0x36c26d = function (_0x5d8728, _0x112364, _0x5a52e5, _0x1bd0d7, _0x109076) {
              return _0x95beae(_0x1bd0d7, _0x109076 - -0x1f2, _0x5a52e5 - 0x48, _0x1bd0d7 - 0x1bd, _0x109076 - 0x49);
          };
          const _0x410066 = function (_0x364cf2, _0x4acc00, _0x3183e5, _0x472d2b, _0x205bb5) {
              return _0x2b3335(_0x472d2b, _0x205bb5 - -0x1f2, _0x3183e5 - 0x83, _0x472d2b - 0xb5, _0x205bb5 - 0x17a);
          };
          const _0x4e12ea = function (_0x3db683, _0x194838, _0x1e11f7, _0x63e900, _0x45f757) {
              return _0x8bc79d(_0x63e900, _0x45f757 - -0x1f2, _0x1e11f7 - 0x59, _0x63e900 - 0x1c5, _0x45f757 - 0x4);
          };
          const _0x4f4cfa = function (_0x387007, _0x1537cc, _0x557f20, _0x22e0b6, _0x1900cd) {
              return _0x2b3335(_0x22e0b6, _0x1900cd - -0x1f2, _0x557f20 - 0x3d, _0x22e0b6 - 0xf7, _0x1900cd - 0x38);
          };
          temporary[_0x36c26d(-0x733, -0x737, -0x73c, -0x749, -0x733)]({
              'newID': _0x1bd2c0['id'],
              'guild': _0x1bd2c0[_0x410066(-0x765, -0x774, -0x77c, -0x773, -0x757)]
          });
          await _0x1c16a8[_0x36c26d(-0x781, -0x77f, -0x75b, -0x748, -0x771) + _0x36c26d(-0x72d, -0x750, -0x77d, -0x759, -0x755)](_0x1bd2c0['id']);
      });
  }
  if (temporary[_0x95beae(-0x594, -0x590, -0x573, -0x567, -0x572) + 'h'] > 0x0)
      for (let _0x18f092 = 0x0; _0x18f092 < temporary[_0x95beae(-0x588, -0x590, -0x56c, -0x56c, -0x57e) + 'h']; _0x18f092++) {
          let _0x1e2d84 = client[_0x95beae(-0x570, -0x556, -0x54e, -0x580, -0x56b) + _0x95beae(-0x551, -0x567, -0x55c, -0x544, -0x591)][_0x8bc79d(-0x553, -0x55e, -0x571, -0x578, -0x579)][_0x8bc79d(-0x540, -0x568, -0x574, -0x53f, -0x580)](temporary[_0x18f092][_0x95beae(-0x579, -0x57a, -0x570, -0x575, -0x54f)]);
          if (_0x1e2d84[_0x1e969e(-0x54b, -0x548, -0x541, -0x537, -0x55b) + 'rs'][_0x2b3335(-0x547, -0x56d, -0x562, -0x573, -0x596)] === 0x0) {
              await _0x1e2d84[_0x95beae(-0x547, -0x553, -0x54d, -0x542, -0x55d) + 'e']();
              return temporary[_0x8bc79d(-0x544, -0x56f, -0x58d, -0x559, -0x54a) + 'e'](_0x18f092, 0x1);
          }
      }
});





client.login(config.BOT_TOKEN);